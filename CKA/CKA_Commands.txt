
Important commands for Kubernetes:

To run a Pod :

	kubectl run <podname> --image=<Imagename>
  
To run a deployment :

	kubectl create deployment <name> --image=<imagename> --replicas=<no>



To Taint a Node :
	
	kubectl taint node <nodeName> <key>=<value>:<taint-effect>
												
												taint-effect = NoSchedule| PreferNoSchedule | NoExecute
	
	ex: kubectl taint node node01 app=frontEnd:NoSchedule
	
To remove Taint on a Node :

	Add - at the end of taint command
    kubectl taint node <nodeName> <key>=<value>:<taint-effect>-
	
Add Toleration to a Pod:
	
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    env: test
spec:
  containers:
  - name: nginx
    image: nginx
    imagePullPolicy: IfNotPresent
  tolerations:
  - key: "key1"
    operator: "Equal"
	value:"value1"
    effect: "NoSchedule"
	

 Problem with taint and tolerations is it doesnot guarantee that the pod will be placed on a specific node.
 
 Placing pod on a specific Node :
 
 1)Using Node name :
	Using "nodeName" in pod  spec tag.
 
 2) Using Node Selectors : For this we need to label the nodes.
	
	Creating labels for a Node
	
	kubectl label node <NodeName> <key>=<value>
	Ex: kubectl label nodes node-1 size=Large
	
	Using Node selector in a pod
	
	apiVersion	: V1
	kind : Pod
	metadata:
	 name:myapp-pod
	spec:
	 nodeSelector :
		size:Large
		
	Limitaion with node selector we can add only one condition .We cannot multiple conditions add like size: large or size:medium

3) Using Node Affinity : 
	Creating labels for a Node
	
	kubectl label node <NodeName> <key>=<value>
	Ex: kubectl label nodes node-1 size=Large
	
	
	Add node Affinity
	==================
	apiVersion: v1
	kind: Pod
	metadata:
		name: with-node-affinity
	spec:
	 containers:
	  - name: nginx
	    image: nginx 
	 affinity:
	  nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: size
              operator: In
              values:
              - Large
			  - medium
	
	
	Supported Operators:
	In, NotIn, Exists and DoesNotExist 
	

DaemonSets :
  This will be create a pod when a new node is created.
  
  apiVersion: apps/v1
  kind: DaemonSet
  metadata:
   name: fluentd-elasticsearch
   